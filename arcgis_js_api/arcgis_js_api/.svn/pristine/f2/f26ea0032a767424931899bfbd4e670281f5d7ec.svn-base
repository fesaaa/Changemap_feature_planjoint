<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="ie lt-ie9 lt-ie8 lt-ie7 ie6"> <![endif]-->
<!--[if IE 7]>         <html class="ie lt-ie9 lt-ie8 ie7"> <![endif]-->
<!--[if IE 8]>         <html class="ie lt-ie9 ie8"> <![endif]-->
<!--[if gt IE 8]><!--> <html> <!--<![endif]-->
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <link rel="stylesheet" href="../styles/screen.css">
  <link rel="stylesheet" href="../styles/homepage.css">
  <link rel="stylesheet" href="../styles/grid.css">
  <link rel="stylesheet" href="../styles/tree.css">
  <link rel="stylesheet" href="../styles/esri-js-api-samples.css">
  <link rel="stylesheet" href="../prettify/prettify.css">
  <style>
    html {
      overflow-y: auto;
    }
    .hidden{
      display: none;
    }
    .switch{
      font-size: 0.8em;
      font-weight: bold;
    }
    .switchWrapper > span.enabled{
      color: #00629b;
      cursor: pointer;
      font-weight: normal;
    }
    .navigation-bar, .section-bar {
      margin-bottom: 0;
    }
    .navigation-bar header h1, .section-bar header h1 {
      margin-top: .35294em;
    }
    .navigation-bar, .section-bar {
      background: url('../graphics/banner.jpg') no-repeat center center #762783;
      min-height: 48px;
      color: white;
    }
    .navigation-bar {
      position: relative;
      z-index: 10;
    }
    #esri-logo {
      background: url('../graphics/logo-esri.png') no-repeat center center ;
      width: 100px;
    }
    @font-face {
    font-family:'icomoon';src:url('../fonts/icons.eot');src:url('../fonts/icons.eot?#iefix') format("embedded-opentype"),url('../fonts/icons.woff') format("woff"),url('../fonts/icons.ttf') format("truetype"),url('../fonts/icons.svg#icomoon') format("svg");font-weight:400;font-style:normal
    }[data-icon]:before {
      font-family: 'icomoon';
      content: attr(data-icon);
      speak: none;
      font-weight: 400;
      line-height: 1;
      -webkit-font-smoothing: antialiased
    }[class*="icon-"]:before {
      font-family: 'icomoon';
      speak: none;
      font-style: normal;
      font-weight: 400;
      line-height: 1;
      -webkit-font-smoothing: antialiased;
      text-transform: none
    }
    pre {
      font-size: 1em;
      line-height: normal;
      margin: 0;
      margin-top: 1em;
    }
    .navigation-bar input {
      margin-top: 0;
      opacity: 1;
    }
    #header nav li a {
      font-size: .875em;
    }
    #esri-logo {
      margin-left: 0;
    }
  </style>
  <!--[if lt IE 9]>
    <script src="../scripts/libs/html5shiv.js"></script>
    <script src="../scripts/libs/selectivizr-min.js"></script>
    <style>
      #wrapper {
        min-width: 960px;
      }
    </style>
  <![endif]-->
  <title>
    Drag and drop to display data | ArcGIS API for JavaScript
  </title> <!-- sub 1:  insert sample title -->
</head>

<body>
<div id="nav">
<header id="header">
  <div class="container relative-container">
    <div class="header-inner ">
      <div class="logo-wrap"><a href="../" id="site-logo">Arc<span>GIS</span> API for JavaScript</a><!--span class="down-arrow" id="down-arrow"></span--></div>
      <nav id="site-nav" class="">
        <a href="/en/" class="selected">
          <h4 class="developers">Arc<span>GIS</span> API for JavaScript</h4>
          <p>Build location-aware applications with ArcGIS</p>
        </a>

        <a href="https://www.arcgis.com/about/">
          <h4 class="organizations">Arc<span>GIS</span> for Organizations</h4>
          <p>Learn more about ArcGIS</p>
        </a>
      </nav>

      <a id="esri-logo" href="http://esri.com">Esri</a>
      <div id="logged-out-navigation" class="dropdown-navigation hide">
  <a id="login-link" class="btn small light" href="/en/log-in/">Log In</a>
</div>
<div id="logged-in-navigation" class="dropdown-navigation dropdown-wrapper hide">
  <a href="/en/usage-summary" class="dropdown btn small light">
    <!-- <img src="http://d3w50ib5d2uy0g.cloudfront.net/cdn/2464//js/esri/arcgisonline/css/images/no-user-thumb.jpg" width="16" height="16" alt=""> --><span id="username"></span>
  </a>
  <div class="dropdown-content">
    <ul>
      <li><a href="/en/usage-summary/">Usage Summary</a></li>
      <li><a href="/en/applications/">Applications</a></li>
      <li></li>
      <li><a href="/en/tools/">GIS Tools</a></li>
    </ul>
    <hr>
    <ul>
      <li><a href="/en/account/profile/">Account Settings</a></li>
      <li><a href="/en/feedback/">Feedback</a></li>
    </ul>
    <hr>
    <ul>
      <li><a id="log-out-link" href="#">Log Out</a></li>
    </ul>
  </div>
</div>

      <div id="mobile-navigation" class="dropdown-navigation dropdown-wrapper">
        <a href="#" class="dropdown btn small light icon icon-list-2">Select <span>a Section</span></a>
        <div class="dropdown-content">
          <ul>
            <li><a href="../jstutorials/">Tutorials</a></li>
            <li><a href="../jshelp/">Concepts</a></li>
            <li><a href="../jsapi/">API Reference</a></li>
            <li><a href="http://forums.arcgis.com/forums/15">Forum</a></li>
            <li><a href="../../">All Developer Resources</a></li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</header>

<div class="navigation-bar">
  <div class="container">
    <nav>
      
      <div id="section-label"><a href=".">Samples</a></div>
      
      <div id="search">
        <form id="searchForm">
          <input type="text" id="searchKeyWord" name="searchKeyWord" size="30" placeholder="Search the samples" disabled="disabled">
          <!-- <input type="submit" id="searchButton" name="searchButton" value=""> -->
        </form>
      </div>
      <ul>
        <!--li class="current"><a href="/en/javascript/">Home</a></li-->
        <li><a href="../jstutorials/">Tutorials</a></li>
        <li><a href="../jshelp/">Concepts</a></li>
        <li><a href="../jsapi/">API Reference</a></li>
        <li class="current"><a href=".">Samples</a></li>
        <li><a href="http://forums.arcgis.com/forums/15">Forum</a></li>
        <li><a href="../../">All Developer Resources</a></li>
      </ul>
    </nav>
  </div>
</div> 
</div><!-- end nav bar --> <!-- sub 2:  navigation bar -->

<div class="container_12">
  <div class="grid_3 contentWrapper">
    <div id="toggleToc">
      <img src="../graphics/tochide.gif"> Hide Table of Contents
    </div>
    <div id="samplesToc">    <div id="tree" style="top: 35px; left: 0px;" class="treeDiv">
      <div id="treeRoot" onselectstart="return false" ondragstart="return false">
        <div class="treeNode">
          <a href="." class="treeUnselected" onclick="clickAnchor(this)">Samples Overview</a>
        </div>
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Latest Samples
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="renderer_color_ramp.html" class="treeUnselected" onclick="clickAnchor(this)">Color ramp symbols</a>
            </div>
            <div class="treeNode">
              <a href="graphics_create_circles.html" class="treeUnselected" onclick="clickAnchor(this)">Create circles</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Analytics
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="util_buffergraphic.html" class="treeUnselected" onclick="clickAnchor(this)">Buffer any shape</a>
            </div>
            <div class="treeNode">
              <a href="util_measurepoly.html" class="treeUnselected" onclick="clickAnchor(this)">Calculate feature length or area</a>
            </div>
            <div class="treeNode">
              <a href="geoenrichment_infographic.html" class="treeUnselected" onclick="clickAnchor(this)">Geoenrichment - Infographic</a>
            </div>
            <div class="treeNode">
              <a href="geoenrichment_carousel.html" class="treeUnselected" onclick="clickAnchor(this)">Geoenrichment - InfographicsCarousel</a>
            </div>
            <div class="treeNode">
              <a href="gp_resultmapservice.html" class="treeUnselected" onclick="clickAnchor(this)">Geoprocessing with result map service</a>
            </div>
            <div class="treeNode">
              <a href="analysis_hotspot.html" class="treeUnselected" onclick="clickAnchor(this)">Hotspot Analysis</a>
            </div>
            <div class="treeNode">
              <a href="widget_swipe.html" class="treeUnselected" onclick="clickAnchor(this)">LayerSwipe widget</a>
            </div>
            <div class="treeNode">
              <a href="widget_measurement.html" class="treeUnselected" onclick="clickAnchor(this)">Measurement</a>
            </div>
            <div class="treeNode">
              <a href="util_relation.html" class="treeUnselected" onclick="clickAnchor(this)">Point in polygon search</a>
            </div>
            <div class="treeNode">
              <a href="util_label_point.html" class="treeUnselected" onclick="clickAnchor(this)">Points for labeling</a>
            </div>
            <div class="treeNode">
              <a href="gp_zonalstats.html" class="treeUnselected" onclick="clickAnchor(this)">Population zonal statistics</a>
            </div>
            <div class="treeNode">
              <a href="gp_servicearea.html" class="treeUnselected" onclick="clickAnchor(this)">Service area task</a>
            </div>
            <div class="treeNode">
              <a href="analysis_summarizenearby.html" class="treeUnselected" onclick="clickAnchor(this)">Summarize Nearby Analysis</a>
            </div>
            <div class="treeNode">
              <a href="gp_viewshed.html" class="treeUnselected" onclick="clickAnchor(this)">Viewshed</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Directions and Routing
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="routetask_basic_servicearea.html" class="treeUnselected" onclick="clickAnchor(this)">Basic service area</a>
            </div>
            <div class="treeNode">
              <a href="widget_directions_basic.html" class="treeUnselected" onclick="clickAnchor(this)">Directions</a>
            </div>
            <div class="treeNode">
              <a href="routetask_closest_facility.html" class="treeUnselected" onclick="clickAnchor(this)">Find closest facilities</a>
            </div>
            <div class="treeNode">
              <a href="ags_traffic.html" class="treeUnselected" onclick="clickAnchor(this)">World traffic</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Dynamic Layers
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="renderer_dynamic_layer_change_attribute.html" class="treeUnselected" onclick="clickAnchor(this)">Change attribute used for a renderer</a>
            </div>
            <div class="treeNode">
              <a href="renderer_dynamic_layer_class_breaks.html" class="treeUnselected" onclick="clickAnchor(this)">Class breaks renderer with dynamic layer</a>
            </div>
            <div class="treeNode">
              <a href="map_dynamic.html" class="treeUnselected" onclick="clickAnchor(this)">Dynamic map service</a>
            </div>
            <div class="treeNode">
              <a href="map_multiplelayerdef.html" class="treeUnselected" onclick="clickAnchor(this)">Layer definitions on a dynamic map service</a>
            </div>
            <div class="treeNode">
              <a href="layers_dynamic_reorder.html" class="treeUnselected" onclick="clickAnchor(this)">Reorder layers in map service</a>
            </div>
            <div class="treeNode">
              <a href="layers_wmsresourceinfo.html" class="treeUnselected" onclick="clickAnchor(this)">WMS - resource info</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Editing
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="ed_attachments.html" class="treeUnselected" onclick="clickAnchor(this)">Attachment editor</a>
            </div>
            <div class="treeNode">
              <a href="toolbar_draw.html" class="treeUnselected" onclick="clickAnchor(this)">Drawing tools</a>
            </div>
            <div class="treeNode">
              <a href="ed_feature_creation.html" class="treeUnselected" onclick="clickAnchor(this)">Edit without editor widget</a>
            </div>
            <div class="treeNode">
              <a href="toolbar_edit.html" class="treeUnselected" onclick="clickAnchor(this)">Editing tools</a>
            </div>
            <div class="treeNode">
              <a href="ed_simpletoolbar.html" class="treeUnselected" onclick="clickAnchor(this)">Editor widget with simple toolbar</a>
            </div>
            <div class="treeNode">
              <a href="ed_toolbar.html" class="treeUnselected" onclick="clickAnchor(this)">Move and edit vertices</a>
            </div>
            <div class="treeNode">
              <a href="ed_relatededits.html" class="treeUnselected" onclick="clickAnchor(this)">Query and edit related records</a>
            </div>
            <div class="treeNode">
              <a href="ed_template_picker.html" class="treeUnselected" onclick="clickAnchor(this)">Template picker widget</a>
            </div>
            <div class="treeNode">
              <a href="ed_attribute_inspector.html" class="treeUnselected" onclick="clickAnchor(this)">Using the attribute inspector</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Geocoding
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="locator_address.html" class="treeUnselected" onclick="clickAnchor(this)">Geocode an address</a>
            </div>
            <div class="treeNode">
              <a href="locator_details.html" class="treeUnselected" onclick="clickAnchor(this)">Geocode details</a>
            </div>
            <div class="treeNode">
              <a href="locator_simple.html" class="treeUnselected" onclick="clickAnchor(this)">Geocoder</a>
            </div>
            <div class="treeNode">
              <a href="locator_service.html" class="treeUnselected" onclick="clickAnchor(this)">Geocoder with custom service</a>
            </div>
            <div class="treeNode">
              <a href="locator_reverse.html" class="treeUnselected" onclick="clickAnchor(this)">Reverse geocode</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Graphics
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="graphics_add.html" class="treeUnselected" onclick="clickAnchor(this)">Add graphics to a map</a>
            </div>
            <div class="treeNode">
              <a href="graphics_create_circles.html" class="treeUnselected" onclick="clickAnchor(this)">Create circles</a>
            </div>
            <div class="treeNode">
              <a href="graphics_contextmenu.html" class="treeUnselected" onclick="clickAnchor(this)">Display context menu</a>
            </div>
            <div class="treeNode">
              <a href="graphics_undoredo.html" class="treeUnselected" onclick="clickAnchor(this)">Graphics with undo redo</a>
            </div>
            <div class="treeNode">
              <a href="layers_point_clustering.html" class="treeUnselected" onclick="clickAnchor(this)">Point clustering</a>
            </div>
            <div class="treeNode">
              <a href="styling_svg_fb.html" class="treeUnselected" onclick="clickAnchor(this)">SVG and CSS to style polygons</a>
            </div>
            <div class="treeNode">
              <a href="styling_svg_quantize.html" class="treeUnselected" onclick="clickAnchor(this)">SVG and CSS using D3</a>
            </div>
            <div class="treeNode">
              <a href="graphics_svg_path.html" class="treeUnselected" onclick="clickAnchor(this)">SVG path to create a SimpleMarkerSymbol</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            HTML5
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="exp_rasterlayer.html" class="treeUnselected" onclick="clickAnchor(this)">Canvas with raster layer</a>
            </div>
            <div class="treeNode">
              <a href="exp_cors_buffer.html" class="treeUnselected" onclick="clickAnchor(this)">Cross Origin Resource Sharing(CORS) - buffer</a>
            </div>
            <div class="treeNode">
              <a href="exp_dragdrop.html" class="treeUnselected" onclick="clickAnchor(this)">Drag and drop to display data</a>
            </div>
            <div class="treeNode">
              <a href="exp_history.html" class="treeUnselected" onclick="clickAnchor(this)">History API to track selected feature</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Image Layers
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="image_simpleimageservice.html" class="treeUnselected" onclick="clickAnchor(this)">Image service</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Map
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="widget_basemap.html" class="treeUnselected" onclick="clickAnchor(this)">Basemap gallery</a>
            </div>
            <div class="treeNode">
              <a href="widget_toggle.html" class="treeUnselected" onclick="clickAnchor(this)">Basemap Toggle</a>
            </div>
            <div class="treeNode">
              <a href="map_simple.html" class="treeUnselected" onclick="clickAnchor(this)">Create a map</a>
            </div>
            <div class="treeNode">
              <a href="mapconfig_smoothpan.html" class="treeUnselected" onclick="clickAnchor(this)">Customize navigation animation</a>
            </div>
            <div class="treeNode">
              <a href="widget_home.html" class="treeUnselected" onclick="clickAnchor(this)">Home Button</a>
            </div>
            <div class="treeNode">
              <a href="widget_legend.html" class="treeUnselected" onclick="clickAnchor(this)">Legend</a>
            </div>
            <div class="treeNode">
              <a href="widget_locate.html" class="treeUnselected" onclick="clickAnchor(this)">Locate Button</a>
            </div>
            <div class="treeNode">
              <a href="widget_overviewmap.html" class="treeUnselected" onclick="clickAnchor(this)">Overview map</a>
            </div>
            <div class="treeNode">
              <a href="widget_scalebar.html" class="treeUnselected" onclick="clickAnchor(this)">Scalebar</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Maps from ArcGIS.com
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="ags_editor.html" class="treeUnselected" onclick="clickAnchor(this)">Editing layout using map data from ArcGIS.com</a>
            </div>
            <div class="treeNode">
              <a href="ags_fade_webmaps.html" class="treeUnselected" onclick="clickAnchor(this)">Fade effect using ArcGIS.com web maps</a>
            </div>
            <div class="treeNode">
              <a href="widget_gauge_webmap.html" class="treeUnselected" onclick="clickAnchor(this)">Gauges with ArcGIS.com webmap</a>
            </div>
            <div class="treeNode">
              <a href="ags_geodesic_buffers.html" class="treeUnselected" onclick="clickAnchor(this)">Geodesic buffers with ArcGIS.com webmap</a>
            </div>
            <div class="treeNode">
              <a href="ags_createwebmapid.html" class="treeUnselected" onclick="clickAnchor(this)">Web map by ID</a>
            </div>
            <div class="treeNode">
              <a href="ags_createwebmapitem.html" class="treeUnselected" onclick="clickAnchor(this)">Web map using JSON</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Mobile
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="mobile_citizenrequest.html" class="treeUnselected" onclick="clickAnchor(this)">Attribute editing - mobile</a>
            </div>
            <div class="treeNode">
              <a href="mobile_compass.html" class="treeUnselected" onclick="clickAnchor(this)">Compass</a>
            </div>
            <div class="treeNode">
              <a href="mobile_arcgis.html" class="treeUnselected" onclick="clickAnchor(this)">Mobile ArcGIS.com</a>
            </div>
            <div class="treeNode">
              <a href="mobile_shake.html" class="treeUnselected" onclick="clickAnchor(this)">Shake gesture recognition</a>
            </div>
            <div class="treeNode">
              <a href="mobile_soilmap.html" class="treeUnselected" onclick="clickAnchor(this)">Soil details - mobile</a>
            </div>
            <div class="treeNode">
              <a href="mobile_tilt.html" class="treeUnselected" onclick="clickAnchor(this)">Tilt gesture</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Popups and Info Windows
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="widget_extendInfowindow.html" class="treeUnselected" onclick="clickAnchor(this)">Custom info window</a>
            </div>
            <div class="treeNode">
              <a href="widget_formatInfoWindow.html" class="treeUnselected" onclick="clickAnchor(this)">Format info window content</a>
            </div>
            <div class="treeNode">
              <a href="gp_popuplink.html" class="treeUnselected" onclick="clickAnchor(this)">Geoprocessing tool link in popup</a>
            </div>
            <div class="treeNode">
              <a href="widget_infowindow.html" class="treeUnselected" onclick="clickAnchor(this)">Info Window Lite</a>
            </div>
            <div class="treeNode">
              <a href="widget_mobilepopup.html" class="treeUnselected" onclick="clickAnchor(this)">Mobile popup</a>
            </div>
            <div class="treeNode">
              <a href="popup_chart.html" class="treeUnselected" onclick="clickAnchor(this)">Popup</a>
            </div>
            <div class="treeNode">
              <a href="popup_sidepanel.html" class="treeUnselected" onclick="clickAnchor(this)">Popup content in side panel</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Portal
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="portal_addshapefile.html" class="treeUnselected" onclick="clickAnchor(this)">Add shapefile</a>
            </div>
            <div class="treeNode">
              <a href="portal_getgroupamd.html" class="treeUnselected" onclick="clickAnchor(this)">Find group ID</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Printing
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="widget_print.html" class="treeUnselected" onclick="clickAnchor(this)">Print</a>
            </div>
            <div class="treeNode">
              <a href="widget_print_esri_request.html" class="treeUnselected" onclick="clickAnchor(this)">Print templates with esri.request</a>
            </div>
            <div class="treeNode">
              <a href="widget_print_webmap.html" class="treeUnselected" onclick="clickAnchor(this)">Print webmap</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Query and Select
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="fl_hover.html" class="treeUnselected" onclick="clickAnchor(this)">Feature layer hover</a>
            </div>
            <div class="treeNode">
              <a href="query_deferred_list.html" class="treeUnselected" onclick="clickAnchor(this)">Manage results from multiple queries</a>
            </div>
            <div class="treeNode">
              <a href="query_nomap.html" class="treeUnselected" onclick="clickAnchor(this)">Query data without a map</a>
            </div>
            <div class="treeNode">
              <a href="fl_paging.html" class="treeUnselected" onclick="clickAnchor(this)">Query with Feature Layer</a>
            </div>
            <div class="treeNode">
              <a href="query_buffer.html" class="treeUnselected" onclick="clickAnchor(this)">Select with Feature Layer</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Renderers
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="renderer_class_breaks.html" class="treeUnselected" onclick="clickAnchor(this)">Class breaks renderer</a>
            </div>
            <div class="treeNode">
              <a href="renderer_class_breaks_proportional_rotation.html" class="treeUnselected" onclick="clickAnchor(this)">Class breaks with rotation and proportional symbols</a>
            </div>
            <div class="treeNode">
              <a href="renderer_color_ramp.html" class="treeUnselected" onclick="clickAnchor(this)">Color ramp symbols</a>
            </div>
            <div class="treeNode">
              <a href="renderer_dot_density.html" class="treeUnselected" onclick="clickAnchor(this)">Dot density renderer</a>
            </div>
            <div class="treeNode">
              <a href="renderer_generate_renderer.html" class="treeUnselected" onclick="clickAnchor(this)">Generate renderer</a>
            </div>
            <div class="treeNode">
              <a href="renderer_proportional_lines.html" class="treeUnselected" onclick="clickAnchor(this)">Proportional symbols for lines</a>
            </div>
            <div class="treeNode">
              <a href="renderer_proportional_points.html" class="treeUnselected" onclick="clickAnchor(this)">Proportional symbols for points</a>
            </div>
            <div class="treeNode">
              <a href="renderer_function.html" class="treeUnselected" onclick="clickAnchor(this)">Renderer using a function</a>
            </div>
            <div class="treeNode">
              <a href="renderer_proportional_scale_dependent.html" class="treeUnselected" onclick="clickAnchor(this)">Scale dependent renderer</a>
            </div>
            <div class="treeNode">
              <a href="renderer_temporal.html" class="treeUnselected" onclick="clickAnchor(this)">Temporal renderer</a>
            </div>
            <div class="treeNode">
              <a href="renderer_unique_value.html" class="treeUnselected" onclick="clickAnchor(this)">Unique value renderer</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Secure Resources
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="widget_identitymanager_client_side.html" class="treeUnselected" onclick="clickAnchor(this)">Identity Manager with info persisted client side</a>
            </div>
            <div class="treeNode">
              <a href="portal_oauth_inline.html" class="treeUnselected" onclick="clickAnchor(this)">OAuth Basic</a>
            </div>
            <div class="treeNode">
              <a href="portal_oauth_popup.html" class="treeUnselected" onclick="clickAnchor(this)">OAuth Popup</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Tiled Layers
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="layers_ags_tiled.html" class="treeUnselected" onclick="clickAnchor(this)">Tiled map service</a>
            </div>
            <div class="treeNode">
              <a href="layers_webtiled_one.html" class="treeUnselected" onclick="clickAnchor(this)">Web tiled</a>
            </div>
            <div class="treeNode">
              <a href="layers_wmtslayerresourceinfo.html" class="treeUnselected" onclick="clickAnchor(this)">WMTS - resource info</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Time
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="widget_histogram_time_slider.html" class="treeUnselected" onclick="clickAnchor(this)">Histogram Time Slider</a>
            </div>
            <div class="treeNode">
              <a href="time_sliderwithdynamiclayer.html" class="treeUnselected" onclick="clickAnchor(this)">Time slider with dynamic map service layer</a>
            </div>
          </div>
        </div>
        <!--end book-->
        <div class="treeNode">
          <img src="../graphics/treenodeplus.gif" onclick="expandCollapse(this.parentNode)" class="treeLinkImage">
          <span onclick="expandCollapse(this.parentNode)" class="category">
            Vector Feature Layers
          </span>
          <div class="treeSubnodesHidden">
            <div class="treeNode">
              <a href="fl_any_projection.html" class="treeUnselected" onclick="clickAnchor(this)">Any projection</a>
            </div>
            <div class="treeNode">
              <a href="fl_dgrid.html" class="treeUnselected" onclick="clickAnchor(this)">dgrid</a>
            </div>
            <div class="treeNode">
              <a href="fl_featureCollection.html" class="treeUnselected" onclick="clickAnchor(this)">Feature collection</a>
            </div>
            <div class="treeNode">
              <a href="data_gas_prices.html" class="treeUnselected" onclick="clickAnchor(this)">Gas price data by state mashup</a>
            </div>
            <div class="treeNode">
              <a href="layers_georss.html" class="treeUnselected" onclick="clickAnchor(this)">GeoRSS</a>
            </div>
            <div class="treeNode">
              <a href="layers_kml.html" class="treeUnselected" onclick="clickAnchor(this)">KML</a>
            </div>
            <div class="treeNode">
              <a href="layers_kmlbuffer.html" class="treeUnselected" onclick="clickAnchor(this)">KML with buffer</a>
            </div>
            <div class="treeNode">
              <a href="layers_label.html" class="treeUnselected" onclick="clickAnchor(this)">Label Layer</a>
            </div>
            <div class="treeNode">
              <a href="fl_no_basemap.html" class="treeUnselected" onclick="clickAnchor(this)">No basemap</a>
            </div>
            <div class="treeNode">
              <a href="fl_ondemand.html" class="treeUnselected" onclick="clickAnchor(this)">On demand mode</a>
            </div>
            <div class="treeNode">
              <a href="data_requestLayerInfo.html" class="treeUnselected" onclick="clickAnchor(this)">Request layer info</a>
            </div>
            <div class="treeNode">
              <a href="fl_selection.html" class="treeUnselected" onclick="clickAnchor(this)">Select features within a two minute drive time</a>
            </div>
            <div class="treeNode">
              <a href="layers_streamlayer.html" class="treeUnselected" onclick="clickAnchor(this)">Stream Layer</a>
            </div>
            <div class="treeNode">
              <a href="fl_dynamic.html" class="treeUnselected" onclick="clickAnchor(this)">Table source from ArcGIS Server</a>
            </div>
          </div>
        </div>
        <!--end book-->
      </div>
    </div>
</div> <!-- sub 3:  add TOC -->
  </div>
  <div class="grid_9 contentWrapper">
    <div id="samplePane">
      <img class="sampleThumbnail" src="https://devext.arcgis.com/sharing/content/items/956a2c61ab55411c9f5eb188ff293b9f/info/thumbnail/Screen_Shot_2013-05-14_at_8.25.05_AM.png" width=200 height=133> <!-- sub 4 -->
      <div id="pageBanner">Drag and drop to display data</div> <!-- sub 5 -->
      <div id="nstext">
        <H4 class="dtH4 sampleLinks">
          <a href="../samples/exp_dragdrop/" target="_blank">View live sample</a><br> <!-- sub 6 -->
          <a href="http://devext.arcgis.com/sharing/content/items/b34d87c023bc4ed0b8df1cb307be7d7e/data">Download as a zip file</a><br> <!-- sub 7 -->
           <!-- sub 8, insert sandbox link, if applicable -->
        </H4>
        <H4 class=dtH4>Description</H4><p>This sample is experimental and may not work on all browsers. Visit <a href='http://caniuse.com/' target='_blank'>caniuse.com</a> to determine if the drag/drop and file access capabilities used in this sample are available for your browser.</p> <p>The sample uses several HTML5 technologies to access files from disk, read them then drag and drop them onto the map control for display. To test the sample drag an image or a csv file with latitude/longitude fields from windows explorer to the map. Note that images are rendered on the map as picture marker symbols and csv files with valid latitude/longitude fields are displayed as a graphics layer. You can also drag/drop map and feature services onto the map for display.</p> <p>This sample sets the map up as a drop zone and executes the <code class='prettyprint'>handleDrop </code>function when a file is dropped on the map. The <code class='prettyprint'>handleDrop </code>function determines which type of file was dropped then processes the drop input for display on the map.</p> <p><pre class='prettyprint'>var node = dojo.byId("mapCanvas");
dojo.connect(node, "dragenter", function(evt) {
  evt.preventDefault();
});
dojo.connect(node, "dragover", function(evt) {
  evt.preventDefault();
});
dojo.connect(node, "drop", handleDrop);</pre></p> <p>At version 2.7, this sample was updated to provide a file upload option to support older browsers that are do not have support for drag/drop and file access capabilites. To test this, open the application in a Internet Explorer and note that a browse button appears that allows users to browse for a csv file. This type of approach is useful when you want to build an application that uses HTML5 capabilities that are not available on all browsers. To add this capability to your applciation create a form with a file input. Note that the input in this sample has a name of <i>data</i>, this value will change depending on the service. The documentation for the service to which you are uploading the file should specify this value.</p> <p><pre class='prettyprint'>&lt;form id="uploadForm" style='display:none;padding:4px;' method="post" enctype="multipart/form-data"&gt; &lt;input type="file" name="data" id="inFile" size="15" /&gt;&lt;/form&gt;</pre></p> <p>This sample uses a .NET handler to return the uploaded csv file in base64 format. Download the zip file to view the handler code.</p> <p><pre class='prettyprint'>dojo.byId("status").innerHTML = "Uploading...";
var requestHandle = esri.request({
  url: "http://servicesbeta.esri.com/demos/csv/reflect.ashx",
  form: dojo.byId("uploadForm"),
  load: requestSucceeded,
  error: requestFailed
});</pre></p> <!-- sub 9 -->

        <H4 class=dtH4>Code</H4>
        <div class="detailSample">
          <pre class="prettyprint">
&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
&lt;meta name="viewport" content="initial-scale=1, maximum-scale=1,user-scalable=no"&gt;
&lt;title&gt;File Access with Drag and Drop&lt;/title&gt;
&lt;link rel="stylesheet" href="http://js.arcgis.com/3.8/js/dojo/dijit/themes/claro/claro.css"&gt;
&lt;link rel="stylesheet" href="http://js.arcgis.com/3.8/js/esri/css/esri.css" /&gt;
&lt;link rel="stylesheet" href="css/layout.css" /&gt;

&lt;script&gt;var dojoConfig = { parseOnLoad:true };&lt;/script&gt;
&lt;script src="http://js.arcgis.com/3.8/"&gt;&lt;/script&gt;
&lt;script&gt;
dojo.require("esri.map");
dojo.require("esri.layers.FeatureLayer");
dojo.require("dojox.data.CsvStore");
dojo.require("esri.dijit.InfoWindowLite");
dojo.require("dijit.Dialog");
dojo.require("dijit.layout.BorderContainer");
dojo.require("dijit.layout.ContentPane");
dojo.require("dojo.io.iframe");
dojo.require("dojox.encoding.base64");

dojo.ready(pageReady);
var map;
//list of lat and lon field strings
var latFieldStrings = ["lat", "latitude", "y", "ycenter"];
var longFieldStrings = ["lon", "long", "longitude", "x", "xcenter"];

function pageReady() {
  //specfiy cors enabled server and proxy for backup
  esri.config.defaults.io.corsEnabledServers.push("serverapi.arcgisonline.com");
  esri.config.defaults.io.proxyUrl = 'http://serverapi.arcgisonline.com/proxy/proxy.ashx';

  dojo.connect(dojo.byId("uploadForm").data, "onchange", function (evt) {
    uploadFile(this.files);
  });
  setupDropZone();

  map = new esri.Map("mapCanvas", {
    basemap:"topo",
    center :[-103.272, 39.096],
    zoom   :4,
    slider :false
  });

  map.infoWindow.resize(275, 175);
}

function setupDropZone() {
  // Let's verify that we have proper browser support, before
  // moving ahead. You can also use a library like Modernizr
  // to detect browser cappabilities:
  // http://www.modernizr.com/
  if (!window.File || !window.FileReader) {
    esri.show(dojo.byId('uploadForm'));
    esri.show(dojo.byId('msg'));
    return;
  }

  var node = dojo.byId("mapCanvas");
  // Reference
  // http://www.html5rocks.com/features/file
  // http://www.html5rocks.com/tutorials/dnd/basics/
  // https://developer.mozilla.org/En/DragDrop/Drag_Operations
  dojo.connect(node, "dragenter", function (evt) {
    // If we don't prevent default behavior here, browsers will
    // perform the default action for the file being dropped i.e,
    // point the page to the file.
    evt.preventDefault();
  });

  dojo.connect(node, "dragover", function (evt) {
    evt.preventDefault();
  });
  dojo.connect(node, "drop", handleDrop);
}

function handleDrop(evt) {
  console.log("Drop: ", evt);
  evt.preventDefault();
  // Reference
  // http://www.html5rocks.com/tutorials/file/dndfiles/
  // https://developer.mozilla.org/en/Using_files_from_web_applications
  var dataTransfer = evt.dataTransfer,
      files = dataTransfer.files,
      types = dataTransfer.types;

  // File drop?
  if (files && files.length === 1) {
    console.log("[ FILES ]");
    var file = files[0]; // that's right I'm only reading one file
    console.log("type = ", file.type);
    if (file.type.indexOf("image/") !== -1) {
      handleImage(file, evt.layerX, evt.layerY);
    } else if (file.name.indexOf(".csv") !== -1) {
      handleCsv(file);
    }
  }

  // Textual drop?
  else if (types) {
    console.log("[ TYPES ]");
    console.log("  Length = ", types.length);
    dojo.forEach(types, function (type) {
      if (type) {
        console.log("  Type: ", type, ", Data: ", dataTransfer.getData(type));
      }
    });

    // We're looking for URLs only.
    var url;
    dojo.some(types, function (type) {
      if (type.indexOf("text/uri-list") !== -1) {
        url = dataTransfer.getData("text/uri-list");
        return true;
      } else if (type.indexOf("text/x-moz-url") !== -1) {
        url = dataTransfer.getData("text/plain");
        return true;
      } else if (type.indexOf("text/plain") !== -1) {
        url = dataTransfer.getData("text/plain");
        url = url.replace(/^\s+|\s+$/g, "");
        if (url.indexOf("http") === 0) {
          return true;
        }
      }
      return false;
    });

    if (url) {
      url = url.replace(/^\s+|\s+$/g, "");
      // Check if this URL is a google search result.
      // If so, parse it and extract the actual URL
      // to the search result
      if (url.indexOf("www.google.com/url") !== -1) {
        var obj = esri.urlToObject(url);
        if (obj && obj.query && obj.query.url) {
          url = obj.query.url;
        }
      }

      if (url.match(/MapServer\/?$/i)) {
        // ArcGIS Server Map Service?
        handleMapServer(url);
      } else if (url.match(/(Map|Feature)Server\/\d+\/?$/i)) {
        // ArcGIS Server Map/Feature Service Layer?
        handleFeatureLayer(url);
      } else if (url.match(/ImageServer\/?$/i)) {
        // ArcGIS Server Image Service?
        handleImageService(url);
      }
    }
  }
}

function handleImage(file, x, y) {
  console.log("Processing IMAGE: ", file, ", ", file.name, ", ", file.type, ", ", file.size);
  var reader = new FileReader();
  reader.onload = function () {
    console.log("Finished reading the image");
    // Create an image element just to find out the image
    // dimension before adding it as a graphic
    var img = dojo.create("img");
    img.onload = function () {
      var width = img.width,
          height = img.height;
      console.log("Image dimensions: ", width, ", ", height);

      // Add a graphic with this image as its symbol
      var symbol = new esri.symbol.PictureMarkerSymbol(reader.result, width &gt; 64 ? 64 : width, height &gt; 64 ? 64 : height);
      var point = map.toMap(new esri.geometry.Point(x, y));
      var graphic = new esri.Graphic(point, symbol);
      map.graphics.add(graphic);
    };
    img.src = reader.result;
  };

  // Note that it's possible to monitor read progress as well:
  // http://www.html5rocks.com/tutorials/file/dndfiles/#toc-monitoring-progress
  // http://www.html5rocks.com/tutorials/file/dndfiles/#toc-reading-files
  reader.readAsDataURL(file);
}

function handleMapServer(url) {
  console.log("Processing MS: ", url);
  var layer = new esri.layers.ArcGISDynamicMapServiceLayer(url, {
    opacity:0.75
  });
  map.addLayer(layer);
}

function handleFeatureLayer(url) {
  console.log("Processing FL: ", url);
  var layer = new esri.layers.FeatureLayer(url, {
    opacity     :0.75,
    mode        :esri.layers.FeatureLayer.MODE_ONDEMAND,
    infoTemplate:new esri.InfoTemplate(null, "${*}")
  });
  map.addLayer(layer);
}

function handleImageService(url) {
  console.log("Processing IS: ", url);
  var layer = new esri.layers.ArcGISImageServiceLayer(url, {
    opacity:0.75
  });
  map.addLayer(layer);
}

function handleCsv(file) {
  console.log("Processing CSV: ", file, ", ", file.name, ", ", file.type, ", ", file.size);
  if (file.data) {
    var decoded = bytesToString(dojox.encoding.base64.decode(file.data));
    processCsvData(decoded);
  } else {
    var reader = new FileReader();
    reader.onload = function () {
      console.log("Finished reading CSV data");
      processCsvData(reader.result);
    };
    reader.readAsText(file);
  }
}

var bytesToString = function (b) {
  console.log("bytes to string");
  var s = [];
  dojo.forEach(b, function (c) {
    s.push(String.fromCharCode(c));
  });
  return s.join("");
};

function processCsvData(data) {
  var newLineIdx = data.indexOf("\n");
  var firstLine = dojo.trim(data.substr(0, newLineIdx)); //remove extra whitespace, not sure if I need to do this since I threw out space delimiters
  var separator = getSeparator(firstLine);
  var csvStore = new dojox.data.CsvStore({
    data     :data,
    separator:separator
  });

  csvStore.fetch({
    onComplete:function (items, request) {
      var objectId = 0;
      var featureCollection = generateFeatureCollectionTemplateCsv(csvStore, items);
      var popupInfo = generateDefaultPopupInfo(featureCollection);
      var infoTemplate = new esri.InfoTemplate(buildInfoTemplate(popupInfo));
      var latField, longField;
      var fieldNames = csvStore.getAttributes(items[0]);
      dojo.forEach(fieldNames, function (fieldName) {
        var matchId;
        matchId = dojo.indexOf(latFieldStrings, fieldName.toLowerCase());
        if (matchId !== -1) {
          latField = fieldName;
        }

        matchId = dojo.indexOf(longFieldStrings, fieldName.toLowerCase());
        if (matchId !== -1) {
          longField = fieldName;
        }
      });

      // Add records in this CSV store as graphics
      dojo.forEach(items, function (item, index) {
        var attrs = csvStore.getAttributes(item),
            attributes = {};
        // Read all the attributes for  this record/item
        dojo.forEach(attrs, function (attr) {
          var value = Number(csvStore.getValue(item, attr));
          if (isNaN(value)) {
            attributes[attr] = csvStore.getValue(item, attr);
          } else {
            attributes[attr] = value;
          }
        });

        attributes["__OBJECTID"] = objectId;
        objectId++;

        var latitude = parseFloat(attributes[latField]);
        var longitude = parseFloat(attributes[longField]);

        if (isNaN(latitude) || isNaN(longitude)) {
          return;
        }

        var geometry = esri.geometry.geographicToWebMercator(new esri.geometry.Point(longitude, latitude));
        var feature = {
          "geometry"  :geometry.toJson(),
          "attributes":attributes
        };
        featureCollection.featureSet.features.push(feature);
      });

      var featureLayer = new esri.layers.FeatureLayer(featureCollection, {
        infoTemplate:infoTemplate,
        id          :'csvLayer'
      });
      featureLayer.__popupInfo = popupInfo
      map.addLayer(featureLayer);
      zoomToData(featureLayer);
    },
    onError   :function (error) {
      console.error("Error fetching items from CSV store: ", error);
    }
  });
}

function generateFeatureCollectionTemplateCsv(store, items) {
  //create a feature collection for the input csv file
  var featureCollection = {
    "layerDefinition":null,
    "featureSet"     :{
      "features"    :[],
      "geometryType":"esriGeometryPoint"
    }
  };
  featureCollection.layerDefinition = {
    "geometryType" :"esriGeometryPoint",
    "objectIdField":"__OBJECTID",
    "type"         :"Feature Layer",
    "typeIdField"  :"",
    "drawingInfo"  :{
      "renderer":{
        "type"  :"simple",
        "symbol":{
          "type"       :"esriPMS",
          "url"        :"http://static.arcgis.com/images/Symbols/Basic/RedSphere.png",
          "imageData"  :"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",
          "contentType":"image/png",
          "width"      :15,
          "height"     :15
        }
      }
    },
    "fields"       :[
      {
        "name"    :"__OBJECTID",
        "alias"   :"__OBJECTID",
        "type"    :"esriFieldTypeOID",
        "editable":false,
        "domain"  :null
      }
    ],
    "types"        :[],
    "capabilities" :"Query"
  };

  var fields = store.getAttributes(items[0]);
  dojo.forEach(fields, function (field) {
    var value = store.getValue(items[0], field);
    var parsedValue = Number(value);
    if (isNaN(parsedValue)) { //check first value and see if it is a number
      featureCollection.layerDefinition.fields.push({
        "name"    :field,
        "alias"   :field,
        "type"    :"esriFieldTypeString",
        "editable":true,
        "domain"  :null
      });
    } else {
      featureCollection.layerDefinition.fields.push({
        "name"    :field,
        "alias"   :field,
        "type"    :"esriFieldTypeDouble",
        "editable":true,
        "domain"  :null
      });
    }
  });
  return featureCollection;
}

function generateDefaultPopupInfo(featureCollection) {
  var fields = featureCollection.layerDefinition.fields;
  var decimal = {
    'esriFieldTypeDouble':1,
    'esriFieldTypeSingle':1
  };
  var integer = {
    'esriFieldTypeInteger'     :1,
    'esriFieldTypeSmallInteger':1
  };
  var dt = {
    'esriFieldTypeDate':1
  };
  var displayField = null;
  var fieldInfos = dojo.map(fields, dojo.hitch(this, function (item, index) {
    if (item.name.toUpperCase() === "NAME") {
      displayField = item.name;
    }
    var visible = (item.type !== "esriFieldTypeOID" && item.type !== "esriFieldTypeGlobalID" && item.type !== "esriFieldTypeGeometry");
    var format = null;
    if (visible) {
      var f = item.name.toLowerCase();
      var hideFieldsStr = ",stretched value,fnode_,tnode_,lpoly_,rpoly_,poly_,subclass,subclass_,rings_ok,rings_nok,";
      if (hideFieldsStr.indexOf("," + f + ",") &gt; -1 || f.indexOf("area") &gt; -1 || f.indexOf("length") &gt; -1 || f.indexOf("shape") &gt; -1 || f.indexOf("perimeter") &gt; -1 || f.indexOf("objectid") &gt; -1 || f.indexOf("_") == f.length - 1 || f.indexOf("_i") == f.length - 2) {
        visible = false;
      }
      if (item.type in integer) {
        format = {
          places        :0,
          digitSeparator:true
        };
      } else if (item.type in decimal) {
        format = {
          places        :2,
          digitSeparator:true
        };
      } else if (item.type in dt) {
        format = {
          dateFormat:'shortDateShortTime'
        };
      }
    }

    return dojo.mixin({}, {
      fieldName        :item.name,
      label            :item.alias,
      isEditable       :false,
      tooltip          :"",
      visible          :visible,
      format           :format,
      stringFieldOption:'textbox'
    });
  }));

  var popupInfo = {
    title          :displayField ? '{' + displayField + '}' : '',
    fieldInfos     :fieldInfos,
    description    :null,
    showAttachments:false,
    mediaInfos     :[]
  };
  return popupInfo;
}

function buildInfoTemplate(popupInfo) {
  var json = {
    content:"&lt;table&gt;"
  };

  dojo.forEach(popupInfo.fieldInfos, function (field) {
    if (field.visible) {
      json.content += "&lt;tr&gt;&lt;td valign='top'&gt;" + field.label + ": &lt;\/td&gt;&lt;td valign='top'&gt;${" + field.fieldName + "}&lt;\/td&gt;&lt;\/tr&gt;";
    }
  });
  json.content += "&lt;\/table&gt;";
  return json;
}

function clearAll() {
  map.graphics.clear();
  var layerIds = map.graphicsLayerIds.slice(0);
  layerIds = layerIds.concat(map.layerIds.slice(1));

  dojo.forEach(layerIds, function (layerId) {
    map.removeLayer(map.getLayer(layerId));
  });
}

function getSeparator(string) {
  var separators = [",", "      ", ";", "|"];
  var maxSeparatorLength = 0;
  var maxSeparatorValue = "";
  dojo.forEach(separators, function (separator) {
    var length = string.split(separator).length;
    if (length &gt; maxSeparatorLength) {
      maxSeparatorLength = length;
      maxSeparatorValue = separator;
    }
  });
  return maxSeparatorValue;
}

function zoomToData(featureLayer) {
  // Zoom to the collective extent of the data
  var multipoint = new esri.geometry.Multipoint(map.spatialReference);
  dojo.forEach(featureLayer.graphics, function (graphic) {
    var geometry = graphic.geometry;
    if (geometry) {
      multipoint.addPoint({
        x:geometry.x,
        y:geometry.y
      });
    }
  });

  if (multipoint.points.length &gt; 0) {
    map.setExtent(multipoint.getExtent().expand(1.25), true);
  }
}

//File upload for older browsers
function uploadFile(files) {
  if (files && files.length === 1) {
    console.log("handle files");
    handleCsv(files[0]);
  } else {
    dojo.byId("status").innerHTML = "Uploading";
    var requestHandle = esri.request({
      url  :"http://serverapi.arcgisonline.com/demos/csv/reflect.ashx",
      form :dojo.byId("uploadForm"),
      load :requestSucceeded,
      error:requestFailed
    });
  }
}

function requestSucceeded(response) {
  dojo.byId("status").innerHTML = "";
  handleCsv(response);
}

function requestFailed(error) {
  dojo.byId("status").innerHTML = 'Unable to upload';
  console.log(dojo.toJson(error));

}
&lt;/script&gt;
&lt;/head&gt;

&lt;body class="claro"&gt;
&lt;!--[if IE 7]&gt;
&lt;style&gt;
  html, body {
    margin: 0;
  }
&lt;/style&gt;
&lt;![endif]--&gt;
&lt;div id="mainWindow" data-dojo-type="dijit.layout.BorderContainer" data-dojo-props="design:'headline',gutters:false"
     style="width:100%; height:100%;"&gt;
  &lt;div id="header" data-dojo-type="dijit.layout.ContentPane" data-dojo-props="region:'top'"&gt;
    &lt;div id="title"&gt;Drag and Drop Demo&lt;/div&gt;
  &lt;/div&gt;
  &lt;div data-dojo-type="dijit.layout.ContentPane" id="rightPane" data-dojo-props="region:'right'"&gt;
    &lt;p style="padding:4px;"&gt;&lt;span&gt;Drag and drop services, images or a csv file with latitude/longitude information
          from windows explorer to the map.&lt;/span&gt;

    &lt;div id='msg' style='color:red;display:none;padding:4px;'&gt; 'You are using a browser that
      doesn't support drag/drop use the file upload box below to add your csv:'
    &lt;/div&gt;
    &lt;form id="uploadForm" style='display:none;padding:4px;' method="post" enctype="multipart/form-data"&gt;
      &lt;input type="file" name="data" id="inFile" size="15" /&gt;
    &lt;/form&gt;
    &lt;span id="status"&gt;&lt;/span&gt;

    &lt;div id="fileInfo"&gt;&nbsp;&lt;/div&gt;
    &lt;/p&gt;
    &lt;p style='padding:4px;'&gt;Note: The CSV file must store the location in fields with one of the following
      names:
      &lt;br /&gt;
      &lt;b&gt;latitude fields:&lt;/b&gt;lat, latitude, y, ycenter
      &lt;br /&gt;
      &lt;b&gt;longitude fields:&lt;/b&gt;lon, long, longitude, x, xcenter
      &lt;br /&gt;
    &lt;/p&gt;

    &lt;p style='padding:4px;'&gt;To test the sample USGS provides real-time earthquake information in various
      formats, including csv. Download one of the csv files to your machine then
      drag/drop to display. Here's a test csv file for earthquakes with a magnitude
      greater than 5.
      &lt;a target="_blank" href="data/earthquakes.csv"&gt;Recent Earthquakes&lt;/a&gt;. Visit the USGS Latest Earthquakes: Feeds &
      Data
      &lt;a target='_blank' href="http://earthquake.usgs.gov/earthquakes/catalogs/"&gt; page &lt;/a&gt;for more details.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div id="mapCanvas" data-dojo-type="dijit.layout.ContentPane" data-dojo-props="region:'center'"&gt;
    &lt;div id="clearButton" class="roundedCorner" onclick="clearAll();"&gt;
      &lt;span&gt;Clear Map&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;

&lt;/html&gt;
 <!-- sub 10 -->
          </pre>
        </div>
        <br/>
        <br/>
        <div id="wh_footer" class="footnote" align="center">
  Please <a href="mailto:js_feedback@esri.com?subject=Feedback on sample:  exp_dragdrop">contact the team</a> to comment or give suggestions.
  <br>
  Copyright &copy; Environmental Systems Research Institute, Inc.
</div> <!-- sub 11:  feedback markup -->
      </div>
    </div>
  </div>
</div> <!-- end main content -->

<!-- TOC script -->
<script src="../scripts/tree.js"></script>

</script>
<script src="../prettify/prettify.js"></script>
<script>
  var dojoConfig = {
    packages: [{
      "name": "js",
      "location": location.pathname.replace(/\/[^/]+$/, "/") + "../scripts"
    }]
  };
</script>
<script src="//js.arcgis.com/3.8compact/"></script> <!-- add API version -->
<script src="../scripts/esri-main-samples.js"></script>


<!-- google analytics -->
<script>
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-215788-63']);
  _gaq.push(['_setDomainName', 'arcgis.com']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
 <!-- google analytics -->

</body>
</html>
